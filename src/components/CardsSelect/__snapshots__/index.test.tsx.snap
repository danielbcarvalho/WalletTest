// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardsCarousel calls setCardOnTheTop when a card is pressed 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "width": "100%",
    }
  }
>
  <RCTScrollView
    ListFooterComponent={[Function]}
    bounces={false}
    data={
      [
        {
          "cvv": "123",
          "expiry": "11/24",
          "id": "4ec42ba9-50af-40d2-af90-8312edbd9XXX",
          "kind": "green",
          "name": "Daniel B Carvalho",
          "number": "5203 9436 6133 9001",
        },
        {
          "cvv": "017",
          "expiry": "12/23",
          "id": "4ec42ba9-50af-40d2-af90-8312edbd9ca2",
          "kind": "black",
          "name": "John Doe",
          "number": "3529 5435 3355 8720",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    style={
      {
        "width": "100%",
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "marginTop": 0,
              "opacity": 1,
              "width": "100%",
            }
          }
        >
          <View
            kind="green"
            style={
              {
                "alignItems": "flex-start",
                "backgroundColor": "#A5FF32",
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "display": "flex",
                "gap": 10,
                "height": 180,
                "justifyContent": "space-around",
                "paddingBottom": 20,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "width": "100%",
              }
            }
          >
            <Text
              kind="green"
              style={
                {
                  "color": "#3F3F3F",
                  "fontFamily": "PTSans-Regular",
                  "fontSize": 18,
                  "lineHeight": 20,
                }
              }
            >
              Green Card
            </Text>
            <View
              style={
                {
                  "alignItems": "flex-start",
                  "display": "flex",
                  "flexDirection": "column",
                  "justifyContent": "flex-start",
                }
              }
            >
              <Text
                kind="green"
                style={
                  {
                    "color": "#3F3F3F",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 16,
                    "lineHeight": 18,
                  }
                }
              >
                Daniel B Carvalho
              </Text>
              <Text
                kind="green"
                style={
                  {
                    "color": "#3F3F3F",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 14,
                    "lineHeight": 16,
                    "textAlign": "center",
                  }
                }
              >
                **** **** **** 9001
              </Text>
              <Text
                kind="green"
                style={
                  {
                    "color": "#3F3F3F",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 14,
                    "lineHeight": 16,
                    "textAlign": "center",
                  }
                }
              >
                validity 11/24
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": true,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "marginTop": -105,
              "opacity": 1,
              "width": "100%",
            }
          }
        >
          <View
            kind="black"
            style={
              {
                "alignItems": "flex-start",
                "backgroundColor": "#000000",
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "display": "flex",
                "gap": 10,
                "height": 180,
                "justifyContent": "space-around",
                "paddingBottom": 20,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "width": "100%",
              }
            }
          >
            <Text
              kind="black"
              style={
                {
                  "color": "#FFFFFF",
                  "fontFamily": "PTSans-Regular",
                  "fontSize": 18,
                  "lineHeight": 20,
                }
              }
            >
              Black Card
            </Text>
            <View
              style={
                {
                  "alignItems": "flex-start",
                  "display": "flex",
                  "flexDirection": "column",
                  "justifyContent": "flex-start",
                }
              }
            >
              <Text
                kind="black"
                style={
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 16,
                    "lineHeight": 18,
                  }
                }
              >
                John Doe
              </Text>
              <Text
                kind="black"
                style={
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 14,
                    "lineHeight": 16,
                    "textAlign": "center",
                  }
                }
              >
                **** **** **** 8720
              </Text>
              <Text
                kind="black"
                style={
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 14,
                    "lineHeight": 16,
                    "textAlign": "center",
                  }
                }
              >
                validity 12/23
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "opacity": 1,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              {
                "color": "#FFF",
                "fontSize": 16,
                "lineHeight": 28,
                "marginTop": 15,
              }
            }
          >
            use this card
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`CardsCarousel renders correctly with cards 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "width": "100%",
    }
  }
>
  <RCTScrollView
    ListFooterComponent={[Function]}
    bounces={false}
    data={
      [
        {
          "cvv": "017",
          "expiry": "12/23",
          "id": "4ec42ba9-50af-40d2-af90-8312edbd9ca2",
          "kind": "black",
          "name": "John Doe",
          "number": "3529 5435 3355 8720",
        },
        {
          "cvv": "123",
          "expiry": "11/24",
          "id": "4ec42ba9-50af-40d2-af90-8312edbd9XXX",
          "kind": "green",
          "name": "Daniel B Carvalho",
          "number": "5203 9436 6133 9001",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    style={
      {
        "width": "100%",
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "marginTop": 0,
              "opacity": 1,
              "width": "100%",
            }
          }
        >
          <View
            kind="black"
            style={
              {
                "alignItems": "flex-start",
                "backgroundColor": "#000000",
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "display": "flex",
                "gap": 10,
                "height": 180,
                "justifyContent": "space-around",
                "paddingBottom": 20,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "width": "100%",
              }
            }
          >
            <Text
              kind="black"
              style={
                {
                  "color": "#FFFFFF",
                  "fontFamily": "PTSans-Regular",
                  "fontSize": 18,
                  "lineHeight": 20,
                }
              }
            >
              Black Card
            </Text>
            <View
              style={
                {
                  "alignItems": "flex-start",
                  "display": "flex",
                  "flexDirection": "column",
                  "justifyContent": "flex-start",
                }
              }
            >
              <Text
                kind="black"
                style={
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 16,
                    "lineHeight": 18,
                  }
                }
              >
                John Doe
              </Text>
              <Text
                kind="black"
                style={
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 14,
                    "lineHeight": 16,
                    "textAlign": "center",
                  }
                }
              >
                **** **** **** 8720
              </Text>
              <Text
                kind="black"
                style={
                  {
                    "color": "#FFFFFF",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 14,
                    "lineHeight": 16,
                    "textAlign": "center",
                  }
                }
              >
                validity 12/23
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": true,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "marginTop": -105,
              "opacity": 1,
              "width": "100%",
            }
          }
        >
          <View
            kind="green"
            style={
              {
                "alignItems": "flex-start",
                "backgroundColor": "#A5FF32",
                "borderBottomLeftRadius": 16,
                "borderBottomRightRadius": 16,
                "borderTopLeftRadius": 16,
                "borderTopRightRadius": 16,
                "display": "flex",
                "gap": 10,
                "height": 180,
                "justifyContent": "space-around",
                "paddingBottom": 20,
                "paddingLeft": 20,
                "paddingRight": 20,
                "paddingTop": 20,
                "width": "100%",
              }
            }
          >
            <Text
              kind="green"
              style={
                {
                  "color": "#3F3F3F",
                  "fontFamily": "PTSans-Regular",
                  "fontSize": 18,
                  "lineHeight": 20,
                }
              }
            >
              Green Card
            </Text>
            <View
              style={
                {
                  "alignItems": "flex-start",
                  "display": "flex",
                  "flexDirection": "column",
                  "justifyContent": "flex-start",
                }
              }
            >
              <Text
                kind="green"
                style={
                  {
                    "color": "#3F3F3F",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 16,
                    "lineHeight": 18,
                  }
                }
              >
                Daniel B Carvalho
              </Text>
              <Text
                kind="green"
                style={
                  {
                    "color": "#3F3F3F",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 14,
                    "lineHeight": 16,
                    "textAlign": "center",
                  }
                }
              >
                **** **** **** 9001
              </Text>
              <Text
                kind="green"
                style={
                  {
                    "color": "#3F3F3F",
                    "fontFamily": "PTSans-Regular",
                    "fontSize": 14,
                    "lineHeight": 16,
                    "textAlign": "center",
                  }
                }
              >
                validity 11/24
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "opacity": 1,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              {
                "color": "#FFF",
                "fontSize": 16,
                "lineHeight": 28,
                "marginTop": 15,
              }
            }
          >
            use this card
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`CardsCarousel renders correctly with no cards 1`] = `
<Text
  style={
    {
      "color": "#FFF",
      "fontSize": 16,
      "lineHeight": 28,
      "marginTop": 15,
    }
  }
>
  ops, no card registered
</Text>
`;
